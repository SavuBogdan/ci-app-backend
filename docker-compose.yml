version: '3'

services:
  nginx:
    container_name: nginx
    restart: always
    image: nginx:1.23.4
    ports:
      - "80:80"
#      - "22:22"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#      - ./docker/nginx/stream.conf:/etc/nginx/nginx.conf
      - code_backend:/var/www/html
#      - code_frontend:/app
    depends_on:
      - php
    networks:
      app-network:
#        ipv4_address: 172.16.238.2

  php:
    container_name: php
    restart: always
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    user: 1000:1000
    privileged: true
    volumes:
      - code_backend:/var/www/html
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/raizeno/.ssh:/home/appuser/.ssh
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    working_dir: /var/www/html
    command: php-fpm
    depends_on:
      - mongodb
      - mysql
      - redis
    networks:
      app-network:

  mongodb:
    container_name: mongodb
    restart: always
    image: mongo:6.0.5
    volumes:
      - mongo_data:/data/db
    networks:
      app-network:
#        ipv4_address: 172.16.238.5

  mysql:
    container_name: mysql
    restart: always
    image: mysql:8.0.32
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=mysecretpassword
      - MYSQL_DATABASE=mydb
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=mypassword
    networks:
      app-network:
#        ipv4_address: 172.16.238.6

  redis:
    container_name: redis
    restart: always
    image: redis:6.2
    networks:
      app-network:
#        ipv4_address: 172.16.238.7

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.13-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      app-network:
#        ipv4_address: 172.16.238.8

networks:
  app-network:
    driver: bridge
    name: app-network



volumes:
#  github_ssh_key:
#    driver_opts:
##      type: bind
#      type: none
#      o: bind
#      device: /home/raizeno/.ssh/github_rsa
##      target: /root/.ssh/id_rsa
##      read_only: true
  docker_socket:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/run/docker.sock
  code_backend:
    driver: local
    driver_opts:
      type: none
      device: .
      o: bind
  mysql_data:
  mongo_data: